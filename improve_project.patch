*** Begin Patch
*** Update File: app/shop/page.tsx
@@
-const fetchProducts = async (): Promise<Product[]> => {
-  const base = process.env.NEXT_PUBLIC_BACKEND_URL?.replace(/\/$/, "") ?? "";
-  const endpoint = `${base}/api/shop/products`;
-  if (!base) {
-    return [];
-  }
-  try {
+const fetchProducts = async (): Promise<Product[]> => {
+  // Get the backend URL and make sure it's absolute (has http(s)://)
+  const raw = process.env.NEXT_PUBLIC_BACKEND_URL ?? "";
+  const base = raw.replace(/\/$/, "");
+  const isAbsolute = /^https?:\/\//i.test(base);
+  if (!isAbsolute) {
+    if (process.env.NODE_ENV !== "production") {
+      console.warn(
+        "Skipping remote fetch: NEXT_PUBLIC_BACKEND_URL is missing or not absolute."
+      );
+    }
+    return [];
+  }
+  const endpoint = `${base}/api/shop/products`;
+  try {
     const response = await fetch(endpoint, { next: { revalidate: 60 } });
     if (!response.ok) return [];
     const payload = (await response.json()) as unknown;
     if (!Array.isArray(payload)) return [];
     return (payload as SupabaseProduct[]).map(mapRemoteProduct);
   } catch (error) {
     console.error("Failed to fetch shop products", error);
     return [];
   }
 };

*** End Patch
