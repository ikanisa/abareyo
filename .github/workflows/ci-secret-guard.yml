name: Secret Guard CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  secret-scan:
    name: Scan for server secrets in client code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run secret scanner
        run: node tools/scripts/check-client-secrets.mjs

  build-check:
    name: Build check (verify no secret leakage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Use npm@11.4.2
        run: npm i -g npm@11.4.2

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          # Minimal env vars needed for build
          NEXT_PUBLIC_BACKEND_URL: http://localhost:3000/api
          NEXT_PUBLIC_SITE_URL: http://localhost:3000
          NEXT_PUBLIC_ENVIRONMENT_LABEL: ci
          NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test-anon-key
          NEXT_PUBLIC_ONBOARDING_PUBLIC_TOKEN: test-token
          SUPABASE_SERVICE_ROLE_KEY: test-service-key
          SITE_SUPABASE_URL: https://example.supabase.co
          SITE_SUPABASE_SECRET_KEY: test-secret
          ONBOARDING_API_TOKEN: test-api-token
        run: npm run build

      - name: Check build output for secrets
        run: |
          echo "Checking .next build output for leaked secrets..."
          
          # List of server-only secrets that should NEVER appear in the build
          SECRETS=(
            "SUPABASE_SERVICE_ROLE_KEY"
            "SITE_SUPABASE_SECRET_KEY"
            "OPENAI_API_KEY"
            "ADMIN_SESSION_SECRET"
            "ONBOARDING_API_TOKEN"
          )
          
          FOUND_SECRETS=0
          for SECRET in "${SECRETS[@]}"; do
            if grep -r "$SECRET" .next/static/ 2>/dev/null; then
              echo "ERROR: Found $SECRET in build output!"
              FOUND_SECRETS=1
            fi
          done
          
          if [ $FOUND_SECRETS -eq 1 ]; then
            echo "FAILURE: Server secrets found in client build!"
            exit 1
          fi
          
          echo "âœ“ No server secrets found in build output"
